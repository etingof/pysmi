* add more tests on edge cases
* generate reverse OID -> MIB index
* handle SMIv1 MAX clause in range constraint
* support MAX clause mapping it into type-specific value
* possibly add additional AST processing phase to resolve imported symbols
  in a more consistent way
* support more common broken SMI constructs 
* separate possibly concatenated source MIB modules into dedicated files on 
  code generation
* DEFVAL and AUGMENTS should not depend on the order of symbols in MIB
* make a collection of fixed MIBs (e.g. Huawei has lots of bad/broken MIBs)
* some MIBs use hex as DEFVAL for types other than OCTET STRING (additional AST processing phase will help)
* handle the case when the symbol and the enumaration value (which can be in DEFVAL) have the same name - llc2 in NETLINK-SPECIFIC-MIB (additional AST processing phase will help)
* check imports and try to add necessary ones if missed (like OBJECT-TYPE, MODULE-IDENTITY, etc)
* generate TextualConvention first or add additional AST processing phase
* implement a cache of available files at abstract reader path
* introduce grammar relaxation infrastructure
* make python code compilation conditional
